#версия docker compose
version: "3.8"

# это говорит о том, что это контейнер
services:
  #  название контейнера
  mysqldb:
    #    номер образа (контейнер будет построен на базе этого образа,
    #    в нашем примере общего образа для MySQL 8) - чтоб связать два контейнера между собой
    image: mysql:8
    #    указываем что делать, если контейнер упал (unless-stopped -
    #    пока мы его руками сами не выключим, перезапускай его)
    restart: unless-stopped
    #    говорим где взять конфиги (в каком файле)
    env_file: .env
    #    задаем параметры в какими MySQL сервер создастся
    #    (указываем из файла .env какие поля взять)
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    #    для связывания внутреннего и внешнего порта (из какого порта нашего
    #    компьютера можно связаться, и с каким портом docker связываемся)
    #     можно так - MYSQLDB_LOCAL_PORT:MYSQLDB_DOCKER_PORT
    ports:
      - "3307:3306"
    #  где хранятся данные MySQL (указываем папку внутреннего контейнера, для MySQL такой адрес)
    volumes:
      - db:/var/lib/mysql

  # это говорит о том, что это контейнер
  app:
    #    говорим этому контейнеру, что она зависит от контейнера
    #    mysqldb (запускается после контейнера mysqldb)
    depends_on:
      - mysqldb
    #    говорим что мы берем dockerfile (потому что точка стоит) и собираем его
    build: .
    #    говорим, что перезапустить контейнер если он упал
    restart: on-failure
    #    откуда брать конфиг (файл .env)
    env_file: .env
    #    указываем порты spring (н каких будет крутиться приложение)
    ports:
#      -  - "6868:8080"
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
    #    можем указать, какие параметры из файла application.properties можем
    #    поменять/переопределить и указать какие параметры брать из файла .env
    environment:
      #      в адресе БД здесь указываем вместо localhost имя контейнера, от которого зависит этот
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?useSSL=false&allowPublicKeyRetrieval=true",
        "spring.datasource.username" : "$MYSQLDB_USER",
        "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQLDialect",
        "spring.jpa.hibernate.ddl-auto" : "update"
      }'
    volumes:
      - .m2:/root/.m2

#постоянное хранение информации, если бы она хранилась (создается какая-то
#  область в памяти, в котором сохраняются данные из контейнера)
#  если это не использовать, то все хранится в контейнере и при перезапуске оно удаляется
volumes:
  db:
  .m2: